module Main where

import Data.Char
import System.Environment
import Functions


main :: IO ()
main =
  do
    args <- getArgs
    --mapM_ putStrLn args
    
    case args of
      [] ->
        fail "Attempted to run with no command line arguments"
      [x] ->
        fail "Attempted to run with one command line arguments"
      ("Read":filename:[]) ->
        do
          networkString <- readFile filename
          let networkList = convertToList networkString
          let writeString = buildString networkList
          writeFile "network.txt" (writeString)
      ("Run":filename:sequenceStr:[]) ->
        do
          networkString <- readFile filename
          let networkList = convertToList networkString
          let sequence = read sequenceStr :: [Int]
          let sortedSequence = applyComparator networkList sequence
          putStrLn (show sortedSequence)
      (x:xs) ->
        do
          putStrLn "More than two args"